//Вопрос 1
// Черепашке нужно забраться на вершину холма. Расстояние от подножия холма до его вершины - 100м. 
//                                     ^тут про холм
// Черепашка за день залезает вверх по холму на 50м. Ночью она спит и скатывается на 30м вниз. 
// На какие сутки черепашка залезет на столб? Требуется написать код на JS для решения задачи и дать ответ
//                                     ^тут уже бедняга на столб ползет :-(

// допустим, что задача не на внимательность, и черепашка действительно ползет НА ХОЛМ, а не НА СТОЛБ 

// на входе проверяем, доползет ли черепашка за одни сутки 
// если нет, то определяем оставшееся расстояние на начало следующего дня
// и запихиваем бедную малютку в рекурсию, пока не доползет 

function poorTurtle(fullDistance, perDayDistance, nightNegativeDistance, daysCount = 1){
  if (fullDistance - perDayDistance <= 0) return daysCount
  let distanceLeft = fullDistance - perDayDistance + nightNegativeDistance
  daysCount += 1
  return poorTurtle(distanceLeft, perDayDistance, nightNegativeDistance, daysCount)
}

console.log('Задача 1. Ответ: на', poorTurtle(100, 50, 30), "день")  //4 дня бедняга будет ползти 


//Вопрос 2:
// В комнате находится человек. Через какое-то время в комнату заходит еще один человек и здоровается с первым. 
// Людей в комнате становится 2, а счетчик рукопожатий становится равен 1. 
// Через какое-то время заходит еще один человек и здоровается с другими людьми в комнате. 
// Людей в комнате - 3 и счетчик рукопожатий - 3. И т.д. 
// Требуется написать код на JS для подсчета кол-ва рукопожатий для 10 человек и дать ответ.

//-------------------------------------------------------------------------------------------------
// В этой задаче главное понять суть. Нам не важно, заходят ли люди поочередно, или же они изначально 
// тусовались в комнате и внезапно решили пожамкать друг другу руки. Если нам нужно посчитать количество
// рукопожатий между n количеством людей, то для нас важны две вещи:
// Первая - человек не может пожать руку сам себе (не технически),
// и Вторая - рукопожатий ВСЕГДА вдвое меньше, чем людей (для двоих считается одно рукопожатие)

// Поэтому сперва нам нужно возвести количество людей в квадрат, 
// чтобы узнать сколько ВСЕГО раз была пожата рука (с каждой стороны)
// Далее мы от получившейся цифры отнимаем количество людей,
// чтобы отсечь "самопожатия", ведь самому себе руку жать нельзя
// И последним шагом мы делим получившиеся рукопожатия на 2,
// чтобы узнать, сколько было итоговых "обоюдных рукопожатий"

function countHandShakes (peopleAmount) {
  return (peopleAmount**2 - peopleAmount) / 2
}

console.log('Задача 2. Ответ:', countHandShakes(10)) // 45 рукопожатий


//Вопрос 3: 
// Есть строка с большим кол-вом слов через запятую (например: "кошка,собака,лошадь,корова,кошка...").
// Известно, что в строке встречаются повторяющиеся слова. Нужно написать функцию на JS. 
// На вход передаются строка с дублями, а на выходе мы получаем строку без дублей.

// сплитим строку по запятой
// прогоняем через сет для унификации
// и джоиним обратно в строку по запятой
function uniqueString(string){
  return [...new Set (string.split(','))].join(',')
}

console.log('Задача 3. Ответ:', uniqueString("кошка,собака,лошадь,корова,кошка"))
